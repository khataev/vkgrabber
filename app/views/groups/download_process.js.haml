:plain
  var interval;
  interval = setInterval(function(){
    $.ajax({
      url: '/progress-job/' + #{@job.id},
      success: function(job){
        var stage, progress;
        console.log('success start');
        // If there are errors
        if (job.last_error != null) {
          console.log('job-error:' + job.last_error);
          $('.progress-status').addClass('text-danger').text(job.progress_stage);
          $('.progress-bar').addClass('progress-bar-danger');
          $('.progress').removeClass('active');
          clearInterval(interval);
        }

        progress = job.progress_current / job.progress_max * 100;
        progress = progress.toFixed(2)
        // In job stage
        if (progress.toString() !== 'NaN'){
          //$('.progress-stage').addClass('text-danger').text(job.progress_stage.stage_name);
          //$('.progress-substage').addClass('text-danger').text(job.progress_stage.substage_name);
          $('.progress-stage').addClass('text-danger').text(JSON.parse(job.progress_stage).stage_name);
          $('.progress-substage').addClass('text-danger').text(JSON.parse(job.progress_stage).substage_name);
          $('.progress-status').text(job.progress_current + '/' + job.progress_max);
          $('.progress-bar').css('width', progress + '%').text(progress + '%');
        }
      },
      error: function(){
        console.log('error start');
        // Job is no loger in database which means it finished successfuly
        $('.progress').removeClass('active');
        $('.progress-bar').css('width', '100%').text('100%');
        $('.progress-status').text('Скачивание завершено успешно!');
        $('.export-link').show();
        console.log('error interval:' + interval);
        clearInterval(interval);
        console.log('error end');
      }
    })
  },200);
console.log('outer interval:'+interval);
